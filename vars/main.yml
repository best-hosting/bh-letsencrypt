---

# Internal letsencrypt structure.
letsencrypt_files: []

# Internal structure containing DNS names checked by letsencrypt.
letsencrypt_sans: []

# Variables for default file names. I use these names in several places, so i
# need these variables.
cert_privkey_fn:    '/privkey.key'
cert_csr_fn:        '/req.csr'
cert_cert_fn:       '/cert.pem'
cert_fullchain_fn:  '/fullchain.pem'
cert_chain_fn:      '/chain.pem'
cert_pfx_fn:        '/container.pfx'
cert_created_by_fn: '/created_by'


## These variables are used to build a local certificates db.

# New certificates (not present in local db yet).
new_certs: []

# Certificates without `created_by` file, specifying remote host, where they
# were issued.
orphaned_certs: []

# Certificates present in local db, but issued by different host.
mismatched_certs: []

# Certificates issued by current host and present in local db.
matched_certs: []


## These variables are used during installation of certificates from local db.

# Local letsencrypt certificates to install.
letsencrypt_install_shared: []

# Local letsencrypt certificates to install.
letsencrypt_install: []

# New certificate files to install. I may set mode for these files in
# `install_certs` (and i'll use some default, if none).
new_installed_certs: []

# Existing (on remote) certificate files to update. I will _not_ allow to set
# mode for these files. Mode should be already set and should be updated by
# corresponding service tasks.
update_installed_certs: []

# Install files with missed source file.
missed_installed_certs: []

# Result of certificate update task. Check `certs_updated.results.X.changed`
# variable to know whether something was updated or not.
# certs_updated: {}

# Result of certificate install task. Check
# `certs_installed.results.X.changed` variable to know whether something was
# installed or not.
# certs_installed: {}

