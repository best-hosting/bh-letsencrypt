
# Obtain local cert db stats.
- block:
    - name: Create local cert db directory
      file:
        path: "{{ local_cert_dir }}"
        state: directory
    - name: Stat certificate files in local cert db
      stat:
        path: "{{ item.local_files.cert }}"
      register: transfer_certs_cert_stats
      loop: "{{ letsencrypt_files }}"
    - name: Stat created_by files in local cert db
      stat:
        path: "{{ item.local_files.created_by }}"
      register: transfer_certs_created_stats
      loop: "{{ letsencrypt_files }}"
  delegate_to: localhost

# Define local cert db variables.
- block:
    - name: Define new certificates
      set_fact:
        new_certs: "{{ new_certs | default([]) + [item.item] }}"
      when: not item.stat.exists
      loop: "{{ transfer_certs_cert_stats.results }}"

    - name: Define orphaned certificates
      set_fact:
        orphaned_certs: "{{ orphaned_certs | default([]) + [item.0.item] }}"
      when: item.0.stat.exists and not item.1.stat.exists
      loop: >
        {{ transfer_certs_cert_stats.results
            | zip(transfer_certs_created_stats.results)
            | list
        }}

    # E.g. orphaned certificates may be counted here too (because `when` check
    # is not sufficient), but this does not matter..
    - name: Define mismatched certificates
      set_fact:
        mismatched_certs: "{{ mismatched_certs | default([]) + [item.item] }}"
      when: item.stat.exists and ansible_hostname != lookup('file', item.item.local_files.created_by)
      loop: "{{ transfer_certs_created_stats.results }}"

    - name: Define matched certificates
      set_fact:
        matched_certs: "{{ matched_certs | default([]) + [item.item] }}"
      when: item.stat.exists and ansible_hostname == lookup('file', item.item.local_files.created_by)
      loop: "{{ transfer_certs_created_stats.results }}"

    - name: Show new certificates
      debug:
        var: new_certs
    - name: Show orphaned certificates
      debug:
        var: orphaned_certs
    - name: Show mismatched certificates
      debug:
        var: mismatched_certs
    - name: Show matched certificates
      debug:
        var: matched_certs

    - name: Show transfer certs
      debug:
        var: transfer_certs

# FIXME: Remove `default([])` everywhere and define variables in `vars`
# instead.

# Add letsencrypt certificates to `install_files` .
- block:
    - name: Define local source cert pathes
      set_fact:
        # By using incorrect mode for certificate files here i may trigger
        # `restart` handler for corresponding service in later roles.
        install_letsencrypt_certs: >
          {{ install_letsencrypt_certs | default([]) +
            [ { 'src' : local_cert_dir + item.letsencrypt_name + '/fullchain.pem'
              , 'mode': 600
              , 'letsencrypt_name' : item.letsencrypt_name
              } | combine(item.fullchain | default({}), recursive=True)
            , { 'src' : local_cert_dir + item.letsencrypt_name + '/cert.pem'
              , 'mode': 600
              , 'letsencrypt_name' : item.letsencrypt_name
              } | combine(item.cert | default({}), recursive=True)
            , { 'src' : local_cert_dir + item.letsencrypt_name + '/privkey.key'
              , 'mode': 600
              , 'letsencrypt_name' : item.letsencrypt_name
              } | combine(item.privkey, recursive=True)
            ] | selectattr('dest', 'defined') | list
          }}
      when: item.letsencrypt_name is defined
      loop: "{{ install_certs }}"
    - name: debug
      debug:
        var: install_letsencrypt_certs
    - name: Stat source files
      local_action:
        module: stat
        path: "{{ item.src }}"
      register: install_letsencrypt_certs_stats
      loop: "{{ install_letsencrypt_certs }}"
    - name: debug
      debug:
        var: install_letsencrypt_certs_stats
    - name: Add letsencrypt certs to install files
      set_fact:
        install_files: "{{ install_files | default([]) + [item.item] }}"
      when: item.stat.exists
      loop: "{{ install_letsencrypt_certs_stats.results }}"
    - name: Debug install_files
      debug:
        var: install_files
  tags:
    - 'debug'

